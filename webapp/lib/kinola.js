// Generated by CoffeeScript 1.7.1
(function() {
  var docElement;

  window.sendCommand = function(kind, form) {
    var IPAddress, InputCommand, delayTime, sendDelay, theURL;
    IPAddress = form.ip_address.value;
    alert("We're getting the IP address: " + IPAddress);
    IPAddress = IPAddress.replace(/https?:\/\//, "");
    sendDelay = true;
    delayTime = 3000;
    if (kind === "type") {
      InputCommand = encodeURIComponent(form.type_command.value);
      InputCommand = InputCommand.replace(/!/g, "%21");
      InputCommand = InputCommand.replace(/'/g, "%27");
      InputCommand = InputCommand.replace(/\(/g, "%28");
      InputCommand = InputCommand.replace(/\)/g, "%29");
      InputCommand = InputCommand.replace(/\*/g, "%2A");
      InputCommand = InputCommand.replace(/\~/g, "%2D");
    }
    if (kind === "keys") {
      InputCommand = form.keys_command.value;
    }
    InputCommand = InputCommand.replace(/^\//, "");
    theURL = "http://" + IPAddress + "/arduino/" + kind + "/" + InputCommand;
    if (sendDelay) {
      timedURL(theURL);
    } else {
      quickURL(theURL);
    }
  };

  window.timedURL = function(url) {
    var sendRequest;
    setTimeout((sendRequest = function() {
      quickURL(url);
    }), 3000);
  };

  window.quickURL = function(url) {
    var XMLHttp;
    XMLHttp = new XMLHttpRequest();
    XMLHttp.open("POST", url, true);
    XMLHttp.send();
  };

  docElement = function(elementId) {
    return document.getElementById(elementId);
  };

  window.searchForButton = function(e, cmd) {
    if (e.keyCode === 13) {
      docElement(cmd + "_btn").click();
    }
    return false;
  };

  window.enableElement = function(e) {
    disableElements();
    docElement(e).disabled = false;
  };

  window.disableElements = function() {
    docElement("modifieroption").disabled = true;
    docElement("specialoption").disabled = true;
    docElement("regularoption").disabled = true;
  };

  window.startup = function() {
    disableElements();
    docElement("holdradio").checked = true;
    docElement("modifierradio").checked = true;
    docElement("modifieroption").disabled = false;
  };

  window.addToKeys = function() {
    var keyAction, keyType, theElement;
    keyAction = getRadioValue("action");
    keyType = getRadioValue("keytype");
    checkDelimiter();
    if (keyAction === "hold") {
      addToFields("h", "Hold ");
    }
    if (keyAction === "push") {
      addToFields("p", "Push ");
    }
    if (keyAction === "release") {
      addToFields("r", "Release ");
    }
    if (keyType === "modifierkey") {
      theElement = docElement("modifieroption");
      addToFields(theElement.value, theElement.options[theElement.selectedIndex].innerHTML);
    }
    if (keyType === "specialkey") {
      theElement = docElement("specialoption");
      addToFields(theElement.value, theElement.options[theElement.selectedIndex].innerHTML);
    }
    if (keyType === "regularkey") {
      theElement = docElement("regularoption");
      addToFields(theElement.value, theElement.value);
    }
  };

  window.checkDelimiter = function() {
    if (docElement("keyscommand").value) {
      addToFields("/", ", ");
    }
  };

  window.getRadioValue = function(name) {
    var radioElement, radioElements, _i, _len;
    radioElements = document.getElementsByName(name);
    for (_i = 0, _len = radioElements.length; _i < _len; _i++) {
      radioElement = radioElements[_i];
      if (radioElement.checked) {
        return radioElement.value;
      }
    }
  };

  window.addToFields = function(shortname, longname) {
    docElement("keyscommand").value += shortname;
    docElement("long_input").value += longname;
  };

  window.removeFromKeys = function() {
    var longField, shortField;
    shortField = docElement("keyscommand").value;
    longField = docElement("long_input").value;
    shortField = shortField.replace(/(.+)\/.+/, "$1");
    longField = longField.replace(/(.+),.+/, "$1");
    docElement("keyscommand").value = shortField;
    docElement("long_input").value = longField;
  };

  window.releaseAllKeys = function() {
    checkDelimiter();
    addToFields("r-1", "Release All Keys");
  };

  window.onload = startup;

}).call(this);
